(ns upgradingdave.practice.euler)

(defn problem1
  "If we list all the natural numbers below 10 that are multiples of 3
  or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23. Find
  the sum of all the multiples of 3 or 5 below 1000."
  [ns]
  (letfn [(mult    [x]  (fn [y] (= (mod y x) 0)))
          (by3or5? [n]  (or ((mult 3) n) ((mult 5) n)))]
    (transduce (filter by3or5?) + ns)))

(defn fibonacci 
  ([] (fibonacci 0 1))
  ([x y]
   (lazy-seq (cons (+ x y) (fibonacci y (+ x y))))))

(defn problem2 [maximum]
  "Each new term in the Fibonacci sequence is generated by adding the
  previous two terms. By starting with 1 and 2, the first 10 terms
  will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ... By considering the
  terms in the Fibonacci sequence whose values do not exceed four
  million, find the sum of the even-valued terms."
  (reduce + (filter even? (take-while #(< % maximum) (fibonacci)))))
